<configuration>

    <!-- Let us define some env vars -->
    <!-- LOG_LEVEL sets the root logging level -->
    <variable name="LOG_LEVEL" value="${LOG_LEVEL:-WARN}"/>

    <!-- LOG_STYLE accepts {SIMPLE, STANDARD, JSON} -->
    <variable name="LOG_STYLE" value="${LOG_STYLE:-JSON}"/>

    <!-- define appenders -->
    <appender name="SIMPLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%-5level %logger %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%date{"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",UTC} %-5level %logger - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="STANDARD" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="STDOUT"/>
    </appender>

    <appender name="JSON" class="net.logstash.logback.appender.LoggingEventAsyncDisruptorAppender">
        <appender class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <timeZone>UTC</timeZone>
                <customFields>{"service": "${COS_SERVICE_NAME}", "powered_by": "chiefofstate"}
                </customFields>
                <fieldNames>
                    <timestamp>timestamp</timestamp>
                </fieldNames>
            </encoder>
        </appender>
    </appender>

    <!-- Turn down Slick noise-->
    <logger name="scala.slick" level="ERROR"/>
    <logger name="slick" level="ERROR"/>
    <logger name="org.flywaydb" level="${LOG_LEVEL}"/>
    <logger name="org.flywaydb.core.internal.dbsupport.SqlScript" level="${LOG_LEVEL}"/>

    <root level="${LOG_LEVEL}">
        <appender-ref ref="${LOG_STYLE}"/>
    </root>
</configuration>
