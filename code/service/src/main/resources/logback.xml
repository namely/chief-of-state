<configuration>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%date{"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",UTC} %coloredLevel %logger [%mdc] - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="ASYNCSTDOUT" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="STDOUT"/>
    </appender>

    <!-- Let us define some env vars -->
    <variable name="LOG_LEVEL" value="${LOG_LEVEL:-WARN}"/>
    <variable name="COS_LOG_LEVEL" value="${COS_LOG_LEVEL:-WARN}"/>
    <variable name="OPENTRACING_LOG_LEVEL" value="${OPENTRACING_LOG_LEVEL:-WARN}"/>

    <appender name="ASYNCJSON" class="net.logstash.logback.appender.LoggingEventAsyncDisruptorAppender">
        <appender class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <timeZone>UTC</timeZone>
                <customFields>{"service": "${COS_SERVICE_NAME}", "powered_by": "chiefofstate"}
                </customFields>
                <fieldNames>
                    <timestamp>timestamp</timestamp>
                </fieldNames>
            </encoder>
        </appender>
    </appender>

    <!-- Turn down Slick noise-->
    <logger name="scala.slick" level="ERROR"/>
    <logger name="slick" level="ERROR"/>

    <!-- Turn down kamon -->
    <logger name="kamon.jaeger" level="WARN"/>

    <logger name="com.namely.chiefofstate" level="${COS_LOG_LEVEL}"/>

    <logger name="io.opentracing" level="${OPENTRACING_LOG_LEVEL}" />

    <root level="${LOG_LEVEL}">
        <appender-ref ref="ASYNCJSON"/>
    </root>
</configuration>
