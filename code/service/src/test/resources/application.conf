include "lagompb.conf"

akka {
  grpc {
    client {
      "chief_of_state.v1.WriteSideHandlerService" {
        # Host to use if service-discovery-mechanism is set to static or grpc-dns
        host = ""

        # port to use if service-discovery-mechism is static or service discovery does not return a port
        port = ""
      }

      "chief_of_state.v1.ReadSideHandlerService" {
        # Host to use if service-discovery-mechanism is set to static or grpc-dns
        host = ""

        # port to use if service-discovery-mechism is static or service discovery does not return a port
        port = ""
      }
    }
  }
}

chiefofstate {
  tracing {
    jaeger-enabled = false
    jaeger-enabled = ${?COS_JAEGER_ENABLED}
  }
  # define settings for the handler services
  handlers-settings {
    # Whether to allow validation of the state and events FQNs
    enable-proto-validation = false
    # define the fully qualified type url  of the state proto
    # example: namely.org_units.OrgUnit
    states-proto = ""
    # list if the fully qualified type url  of the events handled

    events-protos = ""
    writeside-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        fixed-pool-size = 1
        keep-alive-time = 60s
        allow-core-timeout = off
      }
      throughput = 1
    }
    readside-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        fixed-pool-size = 1
        keep-alive-time = 60s
        allow-core-timeout = off
      }
      throughput = 1
    }
  }

  send-command {
    propagated-headers = ""
  }

  encryption {
    encryption-class = ""
  }
}

lagompb {
  service-name = "chiefofstate"
  protos-package = "com.namely.protobuf"
}
