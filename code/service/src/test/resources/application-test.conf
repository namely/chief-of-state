jdbc-default {
	host = "localhost"
	database = "postgres"
	schema = "public"
	port = 5432
	user = "postgres"
	password = "changeme"
}

write-side-slick {
	profile = "slick.jdbc.PostgresProfile$"
	db {
		connectionPool = disabled
		driver = "org.postgresql.Driver"
		user = ${jdbc-default.user}
		password = ${jdbc-default.password}
		serverName = ${jdbc-default.host}
		portNumber = ${jdbc-default.port}
		databaseName = ${jdbc-default.database}
		schemaName = ${jdbc-default.schema}
		url = "jdbc:postgresql://"${write-side-slick.db.serverName}":"${write-side-slick.db.portNumber}"/"${write-side-slick.db.databaseName}"?currentSchema="${jdbc-default.schema}
	}
}

jdbc-journal {
	tables {
		journal {
			tableName = "journal"
			schemaName = ${jdbc-default.schema}
		}
	}
	slick = ${slick}
}
# the akka-persistence-query provider in use
jdbc-read-journal {
	# New events are retrieved (polled) with this interval.
	refresh-interval = "1s"
	# How many events to fetch in one query (replay) and keep buffered until they
	# are delivered downstreams.
	max-buffer-size = "500"
	tables {
		journal {
			tableName = "journal"
			schemaName = ${jdbc-default.schema}
		}
	}
	slick = ${slick}
}
# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
	tables {
		snapshot {
			tableName = "snapshot"
			schemaName = ${jdbc-default.schema}
		}
	}
	slick = ${slick}
}

prometheus {
	# set the route and port for prometheus to scrape
	route = "metrics"
	port = "9102"
}
