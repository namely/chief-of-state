kind: pipeline
type: docker
name: default

image_pull_secrets:
  - namely_pull_secrets

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/pull/**
      - refs/tags/**

steps:

  - name: git submodules
    image: registry.namely.land/namely/drone-git:latest
    pull: always
    settings:
      git_cmd: submodule update --init
      ssh_key:
        from_secret: namely_id_rsa

  - name: docker tags
    image: registry.namely.land/namely/drone-docker-tag:latest
    pull: always
    settings:
      mode: magic

  - name: style checker
    image: registry.namely.land/namely/sbt:1.3.6-2.13.1
    commands:
      - sbt scalastyle

  - name: test
    image: registry.namely.land/namely/sbt:1.3.6-2.13.1
    commands:
      - sbt clean coverage test coverageReport
    environment:
      JFROG_USERNAME:
        from_secret: namely_jfrog_username
      JFROG_PASSWORD:
        from_secret: namely_jfrog_api_key

  # - name: codecov
  #   image: registry.namely.land/namely/sbt:1.3.6-2.13.1
  #   commands:
  #     - curl -s https://codecov.io/bash | bash || echo 'Codecov failed to upload'
  #   environment:
  #     CODECOV_TOKEN: "0153baa7-1895-47ec-8224-bfacf5cb5dc7"

  # - name: build
  #   image: registry.namely.land/namely/sbt:1.3.6-2.13.1
  #   commands:
  #     - sbt docker:stage
  #   environment:
  #     JFROG_USERNAME:
  #       from_secret: namely_jfrog_username
  #     JFROG_PASSWORD:
  #       from_secret: namely_jfrog_api_key

  # - name: publish groups image
  #   image: plugins/docker
  #   settings:
  #     repo: registry.namely.land/namely/reportbuilder-groups-service
  #     registry: registry.namely.land
  #     username:
  #       from_secret: namely_docker_username
  #     password:
  #       from_secret: namely_docker_password
  #     context: services/group-service/group-impl/target/docker/stage
  #     dockerfile: services/group-service/group-impl/target/docker/stage/Dockerfile
  #   when:
  #     ref:
  #       include:
  #       - refs/heads/master
  #       - refs/tags/**
