version: '3.5'

services:
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@namely.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - 5050:80

  tracer:
    image: jaegertracing/all-in-one:1.17
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
      LOG_LEVEL: INFO
    ports:
      - 16686:16686
      - 14268:14268

  grafana:
    image: grafana/grafana
    volumes:
      - ./docker/grafana-prometheus.yml:/etc/grafana/provisioning/datasources/prometheus.yml
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  chiefofstate:
    image: registry.namely.land/namely/chief-of-state:dev
    hostname: "chiefofstate"
    depends_on:
      - postgres
      - prometheus
    ports:
      - 9000:9000
      - 9102:9102
      - 9095:9095
      - 5266:5266
    environment:
      LOG_LEVEL: "INFO"
      LOG_STYLE: "SIMPLE"
      GRPC_PORT: 9000
      WRITE_SIDE_HANDLER_SERVICE_HOST: host.docker.internal
      WRITE_SIDE_HANDLER_SERVICE_PORT: 50052
      HANDLER_SERVICE_ENABLE_PROTO_VALIDATION: "false"
      COS_JAEGER_ENABLED: "true"
      JAEGER_HOST: tracer
      JAEGER_PORT: 14268
      JAEGER_SERVICE_NAME: "chiefofstate"
      JAEGER_AGENT_HOST: "tracer"
      JAEGER_AGENT_PORT: 5775
      JAEGER_SAMPLER_TYPE: "const"
      JAEGER_SAMPLER_PARAM: "1"
      JAEGER_PROPAGATION: "b3"
      GRPC_CALLS_TIMEOUT: 2000
      COS_SERVICE_NAME: "chiefofstate"
      COS_POSTGRES_USER: "postgres"
      COS_POSTGRES_PASSWORD: "changeme"
      COS_POSTGRES_HOST: "postgres"
      COS_POSTGRES_PORT: 5432
      COS_POSTGRES_DB: "postgres"
      COS_POSTGRES_SCHEMA: "public"
      COS_NUM_SHARDS: 10
      COS_EVENTS_BATCH_THRESHOLD: 2
      COS_NUM_SNAPSHOTS_TO_RETAIN: 2
      COS_READ_SIDE_ENABLED: "true"
      COS_READ_SIDE_OFFSET_STORE_AUTO_CREATE: "true"
      COS_READ_SIDE_OFFSET_STORE_TABLE: "read_side_offsets"
      COS_READ_SIDE_OFFSET_DB_HOST: "postgres"
      COS_READ_SIDE_OFFSET_DB_PORT: 5432
      COS_READ_SIDE_OFFSET_DB_USER: "postgres"
      COS_READ_SIDE_OFFSET_DB_PASSWORD: "changeme"
      COS_READ_SIDE_OFFSET_DB: "postgres"
      COS_READ_SIDE_OFFSET_DB_SCHEMA: "public"
      COS_READ_SIDE_CONFIG__HOST__RS1: host.docker.internal
      COS_READ_SIDE_CONFIG__PORT__RS1: 50053
      JAVA_OPTS: "-Dconfig.resource=docker.conf -XX:+UseG1GC"
